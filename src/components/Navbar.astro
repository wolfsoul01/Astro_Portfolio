---
const title = "<AstroDev/>";
---

<header>
  <!-- component -->
  <div class="inset-x-0">
    <div class="antialiased bg-gray-100">
      <div
        class="w-full text-gray-700 bg-gradient-to-r from-astro-200 to-yellow-50 to-65% border-none"
      >
        <div
          x-data="{ open: true }"
          class="flex flex-col max-w-screen-xl px-4 mx-auto md:items-center md:justify-between md:flex-row md:px-6 lg:px-8"
        >
          <div class="flex flex-row items-center justify-between p-4 flex-grow">

            <img
              src="/img/logo.png"
              alt=""
              class="w-20 scale-150 max-h-screen"
            />

            <!-- Menu animacion hamb -->
            <label
              for="check"
              class="flex flex-col cursor-pointer w-[40px] min-w-[40px] md:hidden"
            >
              <input type="checkbox" name="" id="check" />
              <span class="row"></span>
              <span class="row"></span>
              <span class="row"></span>
            </label>
          </div>


          <nav
            id="nav"
            class="flex-col hidden pb-4 md:pb-0 md:flex md:justify-end md:flex-row [&>a]:text-lg relative [&>a]:relative [&>a]:z-10"
          >
            <a
              id="link"
              class="px-4 py-2 mt-2 text-sm font-semibold bg-transparent rounded-lg md:mt-0 md:ml-4 hover:text-gray-900 focus:text-gray-900 focus:bg-gray-200 focus:outline-none focus:shadow-outline"
              href="#Home">Inicio</a
            >
            <a
              id="link"
              class="px-4 py-2 mt-2 text-sm font-semibold bg-transparent rounded-lg md:mt-0 md:ml-4 hover:text-gray-900 focus:text-gray-900 focus:bg-gray-200 focus:outline-none focus:shadow-outline"
              href="#Proyectos">Proyectos</a
            >
            <a
              id="link"
              class="px-4 py-2 mt-2 text-sm font-semibold bg-transparent rounded-lg md:mt-0 md:ml-4 hover:text-gray-900 focus:text-gray-900 focus:bg-gray-200 focus:outline-none focus:shadow-outline"
              href="#Skills">Habilidades</a
            >
            <a
              id="link"
              class="px-4 py-2 mt-2 text-sm font-semibold bg-transparent rounded-lg md:mt-0 md:ml-4  hover:text-gray-900 focus:text-gray-900 focus:bg-gray-200 focus:outline-none focus:shadow-outline"
              href="#Contacto">Contacto</a
            >
          </nav>
          <div
            id="hover"
            class="absolute rounded-md bg-gray-300 transition-all duration-200 ease-in-out top-[var(--top)] left-[var(--left)] w-[var(--whidth)] h-[var(--height)]"
          >
          </div>
        </div>
      </div>
    </div>
  </div>
</header>

<script>
  // Se encarga de controlar el efecto de hover
  const hover = document.getElementById("hover");
  const link = document.querySelectorAll("#link");

  //Asignandole las dimesniones y la posision
  link.forEach((item) => {
    item.addEventListener("mouseover", () => {
      const { top, left, width, height } = item.getBoundingClientRect();
      hover.style.opacity = "100";

      hover.style.setProperty("top", `${top}px`);
      hover.style.setProperty("left", `${left}px`);
      hover.style.setProperty("width", `${width}px`);
      hover.style.setProperty("height", `${height}px`);
    });

    //Efecto de desaparecer
    item.addEventListener("mouseleave", () => {
      hover.style.opacity = "0";
    });

    item.addEventListener("click", () => {
      hover.style.opacity = "0";
    });
  });

  //Esto es temporal vale :)
</script>

<script>
  //Se encarga del menu responsi
  const nav = document.getElementById("nav");
  const check = document.getElementById("check");
  const link = document.querySelectorAll("#link");
  //Efecto del menu

  check.addEventListener("click", () => {

    nav.classList.toggle("hidden");
    nav.classList.toggle("flex");
  });

  //Para ocultar en menu al dar click en los links
  link.forEach((item) => {
    item.addEventListener("click", () => {
      nav.classList.toggle("hidden");
      nav.classList.toggle("flex");
    });
  });
</script>

<style>
  .row {
    background-color: #222;
    border-radius: 10px;
    height: 4px;
    margin: 4px 0;
    transition: 0.4s cubic-bezier(0.68, -0.6, 0.32, 1.6);
  }

  .row:nth-of-type(1) {
    width: 50%;
  }
  .row:nth-of-type(2) {
    width: 100%;
  }
  .row:nth-of-type(3) {
    width: 75%;
  }

  input[type="checkbox"] {
    display: none;
  }

  input[type="checkbox"]:checked ~ .row:nth-of-type(1) {
    transform: rotate(45deg) translate(8px, 0px);
  }
  input[type="checkbox"]:checked ~ .row:nth-of-type(2) {
    transform: rotate(-45deg);
  }
  input[type="checkbox"]:checked ~ .row:nth-of-type(3) {
    transform: translate(9px, -11px) rotate(43deg);
  }
</style>
